app/layout.js:
\`\`\`jsx
\
import 
'./globals.css'
\
export const metadata = {
  title: 'Next.js',
  description: 'Generated by Next.js',
}
\
export default function RootLayout({ children }) {\
  return (\
    <html lang="en\">\
      <head>\
        <link\
          href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;600;700&family=Playfair+Display:wght@400;600;700&display=swap"\
          rel="stylesheet"\
        />\
      </head>\
      <body>{children}</body>\
    </html>\
  )
}\
\`\`\`
\
app/page.jsx:
\`\`\`jsx\
"use client";\
import React, { useState, useEffect } from 'react';\
import './globals.css';\
import './carousel/carousel.css';\
import './favorites/favorites.css';\
import './timeline/timeline.css';\
import './surprise/surprise.css';
\
export default function Home() {\
  const [days, setDays] = useState(0);\
  const [hours, setHours] = useState(0);\
  const [minutes, setMinutes] = useState(0);\
  const [seconds, setSeconds] = useState(0);

  useEffect(() => {
    const target = new Date('2024-03-08T00:00:00');

    const interval = setInterval(() => {
      const now = new Date();
      const difference = target.getTime() - now.getTime();

      if (difference > 0) {
        setDays(Math.floor(difference / (1000 * 60 * 60 * 24)));
        setHours(Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));
        setMinutes(Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)));
        setSeconds(Math.floor((difference % (1000 * 60)) / 1000));
      } else {
        clearInterval(interval);
        setDays(0);
        setHours(0);
        setMinutes(0);
        setSeconds(0);
      }
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  return (
    <main className="main">
      <div className="countdown">
        <h1>Countdown to a Special Day</h1>
        <div className="timer">
          <div>
            <p>{days}</p>
            <p>Days</p>
          </div>
          <div>
            <p>{hours}</p>
            <p>Hours</p>
          </div>
          <div>
            <p>{minutes}</p>
            <p>Minutes</p>
          </div>
          <div>
            <p>{seconds}</p>
            <p>Seconds</p>
          </div>
        </div>
      </div>

      <style jsx>{`
        .main {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          min-height: 100vh;
          background: url('/bg.jpg') no-repeat center center fixed;
          background-size: cover;
          color: #fff;
          text-align: center;
          padding: 20px;
        }

        .countdown {
          background-color: rgba(0, 0, 0, 0.7);
          padding: 30px;
          border-radius: 15px;
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        }

        h1 {
          font-size: 2.5em;
          margin-bottom: 20px;
          font-family: 'Playfair Display', serif;
          font-weight: 600;
          text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
        }

        .timer {
          display: flex;
          justify-content: space-around;
          align-items: center;
          width: 100%;
          max-width: 700px;
          margin: 0 auto;
        }

        .timer div {
          padding: 15px 20px;
          border-radius: 10px;
          background-color: rgba(255, 255, 255, 0.1);
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
          min-width: 120px;
        }

        .timer p {
          font-size: 2em;
          margin: 0;
          font-family: 'Dancing Script', cursive;
          font-weight: 700;
          text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.9);
        }

        .timer p:last-child {
          font-size: 0.8em;
          font-weight: 600;
          text-transform: uppercase;
          letter-spacing: 1px;
          margin-top: 5px;
        }

        @media (max-width: 768px) {
          .timer {
            flex-direction: column;
          }

          .timer div {
            margin: 10px 0;
            min-width: 80%;
          }

          h1 {
            font-size: 2em;
          }
        }
      `}</style>
    </main>
  );
}
\`\`\`

app/surprise/surprise.css:
\`\`\`css

.surprise-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #f7f7f7;
    padding: 20px;
    text-align: center;
}

.surprise-message {
    font-size: 2em;
    color: #e91e63;
    margin-bottom: 20px;
    font-family: 'Dancing Script', cursive;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
}

.surprise-image {
    max-width: 80%;
    height: auto;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    margin-bottom: 30px;
}

.surprise-button {
    padding: 15px 30px;
    font-size: 1.2em;
    background-color: #e91e63;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-family: 'Playfair Display', serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.surprise-button:hover {
    background-color: #c2185b;
}

@media (max-width: 600px) {
    .surprise-message {
        font-size: 1.5em;
    }

    .surprise-button {
        font-size: 1em;
    }
}
\`\`\`

app/timeline/timeline.css:
\`\`\`css

.timeline-container {
    font-family: 'Arial', sans-serif;
    margin: 20px auto;
    max-width: 800px;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.timeline-title {
    font-size: 2em;
    text-align: center;
    margin-bottom: 20px;
    color: #333;
    font-family: 'Playfair Display', serif;
}

.timeline {
    position: relative;
    padding: 20px 0;
}

.timeline::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 2px;
    background: #ddd;
    margin-left: -1px;
}

.timeline-item {
    margin-bottom: 20px;
    position: relative;
}

.timeline-item:nth-child(odd) {
    padding-right: 50%;
    text-align: right;
}

.timeline-item:nth-child(even) {
    padding-left: 50%;
}

.timeline-item-content {
    position: relative;
    padding: 15px;
    background: #f0f0f0;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.timeline-item-content::before {
    content: '';
    position: absolute;
    top: 20px;
    width: 0;
    height: 0;
    border-style: solid;
}

.timeline-item:nth-child(odd) .timeline-item-content::before {
    right: -15px;
    border-width: 10px 0 10px 15px;
    border-color: transparent transparent transparent #f0f0f0;
}

.timeline-item:nth-child(even) .timeline-item-content::before {
    left: -15px;
    border-width: 10px 15px 10px 0;
    border-color: transparent #f0f0f0 transparent transparent;
}

.timeline-item-date {
    position: absolute;
    top: 0;
    font-size: 0.9em;
    color: #777;
    font-style: italic;
    font-family: 'Dancing Script', cursive;
}

.timeline-item:nth-child(odd) .timeline-item-date {
    left: -165px;
}

.timeline-item:nth-child(even) .timeline-item-date {
    right: -165px;
}

/* Media Queries for Responsiveness */
@media (max-width: 768px) {
    .timeline::before {
        left: 20px;
    }

    .timeline-item:nth-child(odd) {
        padding-right: 0;
        text-align: left;
    }

    .timeline-item:nth-child(even) {
        padding-left: 0;
    }

    .timeline-item:nth-child(odd) .timeline-item-date,
    .timeline-item:nth-child(even) .timeline-item-date {
        top: -30px;
        left: 30px;
        right: auto;
    }

    .timeline-item:nth-child(odd) .timeline-item-content::before {
        border-width: 10px 0 10px 15px;
        border-color: transparent transparent transparent #f0f0f0;
        left: -15px;
        right: auto;
    }

    .timeline-item:nth-child(even) .timeline-item-content::before {
        border-width: 10px 0 10px 15px;
        border-color: transparent transparent transparent #f0f0f0;
        left: -15px;
    }
}
\`\`\`

app/favorites/favorites.css:
\`\`\`css

.favorites-container {
    font-family: 'Arial', sans-serif;
    padding: 20px;
    background-color: #f9f9f9;
    text-align: center;
}

.favorites-title {
    font-size: 2.5em;
    color: #e91e63;
    margin-bottom: 20px;
    font-family: 'Playfair Display', serif;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}

.favorites-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    justify-content: center;
}

.favorite-item {
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.3s ease;
}

.favorite-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.favorite-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
}

.favorite-details {
    padding: 15px;
    text-align: left;
}

.favorite-name {
    font-size: 1.2em;
    font-weight: bold;
    color: #333;
    margin-bottom: 5px;
}

.favorite-description {
    font-size: 0.9em;
    color: #666;
    line-height: 1.4;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .favorites-title {
        font-size: 2em;
    }

    .favorites-grid {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    .favorite-image {
        height: 150px;
    }
}
\`\`\`

app/carousel/carousel.css:
\`\`\`css

.carousel-container {
    width: 100%;
    max-width: 800px;
    margin: 20px auto;
    overflow: hidden;
    position: relative;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

.carousel-wrapper {
    display: flex;
    transition: transform 0.5s ease-in-out;
}

.carousel-item {
    width: 100%;
    flex-shrink: 0;
}

.carousel-item img {
    width: 100%;
    height: auto;
    display: block;
}

.carousel-navigation {
    position: absolute;
    top: 50%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
    padding: 0 10px;
}

.nav-button {
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.nav-button:hover {
    background-color: rgba(0, 0, 0, 0.8);
}

/* Optional: Add some styling for the carousel indicators */
.carousel-indicators {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
}

.indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    margin: 0 5px;
    cursor: pointer;
}

.indicator.active {
    background-color: white;
}

/* Responsive adjustments */
@media (max-width: 600px) {
    .nav-button {
        padding: 8px 12px;
    }
}
\`\`\`

app/globals.css:
\`\`\`css
/* @import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;600;700&family=Playfair+Display:wght@400;600;700&display=swap'); */

body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
\`\`\`
